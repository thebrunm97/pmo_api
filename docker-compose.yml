version: '3.8'

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    # Garante que o Redis está pronto antes de outros serviços o usarem
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  api:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    # O depends_on agora espera pela condição de saúde do Redis
    depends_on:
      redis:
        condition: service_healthy

  celery_worker:
    build: .
    command: python -m celery -A pmo_api worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    # O worker também espera pela condição de saúde do Redis
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started
